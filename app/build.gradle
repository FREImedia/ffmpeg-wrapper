apply plugin: 'com.android.model.application'

model {
    android {
        // SETTINGS
        def flavour =  "armeabi-v7a" // armeabi-v7a, x86

        // CONFIG
        buildToolsVersion = "23.0.2"
        compileSdkVersion = 23
        //def ffmpeg = ffmpeg_base + "android/arm/include"

        defaultConfig {
            applicationId = 'com.example.hellojni'
            minSdkVersion.apiLevel = 19
            targetSdkVersion.apiLevel = 23
        }
        ndk {
            moduleName = "native"

            cppFlags.addAll("-std=c++11", "-fexceptions",
                    "-D __cplusplus=201103L", "-frtti",
                    "-D __GXX_EXPERIMENTAL_CXX0X__")
            cppFlags.add('-I' + file("src/main/jni"))
            cppFlags.add('-I' + file("src/main/jniInclude/"+flavour))
            CFlags.add('-I' + file("src/main/jniInclude/"+flavour+"/"))
            ldFlags.addAll("-L${file("src/main/jniLibs/"+flavour+"/")}".toString())
            ldLibs.addAll(["ffmpeg"])
            ldLibs.addAll("log", "android", "GLESv2", "dl", "atomic", "EGL", "z", "stdc++", "OpenSLES")

            stl = "gnustl_shared"

            ndk.abiFilters.add(flavour)
        }

        buildTypes {
            release {
                minifyEnabled = false
                proguardFiles.add(file('proguard-android.txt'))
            }
        }

        productFlavors {
            // for detailed abiFilter descriptions, refer to "Supported ABIs" @
            // https://developer.android.com/ndk/guides/abis.html#sa

            create("arm7") {
                ndk.abiFilters.add("armeabi-v7a")
            }

            create("arm") {
                ndk.abiFilters.add("armeabi")
            }

            create("x86") {
                ndk.abiFilters.add("x86")
            }

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.3.0'
}